apiVersion: apps/v1
kind: Deployment
metadata:
  name: mesaifinal-frontend
  namespace: mesaifinal
  labels:
    app: mesaifinal-frontend
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mesaifinal-frontend
  template:
    metadata:
      labels:
        app: mesaifinal-frontend
        version: v1.0.0
    spec:
      containers:
      - name: frontend
        image: mesaifinal/frontend:latest
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: VITE_API_URL
          valueFrom:
            configMapKeyRef:
              name: mesaifinal-config
              key: api_url
        - name: VITE_KENDO_UI_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: mesaifinal-secrets
              key: kendo_license_key
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      imagePullSecrets:
      - name: docker-registry-secret
      securityContext:
        fsGroup: 1001
---
apiVersion: v1
kind: Service
metadata:
  name: mesaifinal-frontend-service
  namespace: mesaifinal
  labels:
    app: mesaifinal-frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: mesaifinal-frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mesaifinal-frontend-ingress
  namespace: mesaifinal
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
spec:
  tls:
  - hosts:
    - app.mesaifinal.com
    secretName: mesaifinal-frontend-tls
  rules:
  - host: app.mesaifinal.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mesaifinal-frontend-service
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mesaifinal-config
  namespace: mesaifinal
data:
  api_url: "https://api.mesaifinal.com"
  environment: "production"
---
apiVersion: v1
kind: Secret
metadata:
  name: mesaifinal-secrets
  namespace: mesaifinal
type: Opaque
data:
  kendo_license_key: <base64-encoded-license-key>
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mesaifinal-frontend-hpa
  namespace: mesaifinal
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mesaifinal-frontend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
